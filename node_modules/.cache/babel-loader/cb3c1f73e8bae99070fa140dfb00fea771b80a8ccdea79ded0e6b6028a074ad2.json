{"ast":null,"code":"// Master DOManipulator v2 ------------------------------------------------------------\nconst items = document.querySelectorAll('.item'),\n  controls = document.querySelectorAll('.control'),\n  headerItems = document.querySelectorAll('.item-header'),\n  descriptionItems = document.querySelectorAll('.item-description'),\n  activeDelay = .76,\n  interval = 5000;\nlet current = 0;\nconst slider = {\n  init: () => {\n    controls.forEach(control => control.addEventListener('click', e => {\n      slider.clickedControl(e);\n    }));\n    controls[current].classList.add('active');\n    items[current].classList.add('active');\n  },\n  nextSlide: () => {\n    // Increment current slide and add active class\n    slider.reset();\n    if (current === items.length - 1) current = -1; // Check if current slide is last in array\n    current++;\n    controls[current].classList.add('active');\n    items[current].classList.add('active');\n    slider.transitionDelay(headerItems);\n    slider.transitionDelay(descriptionItems);\n  },\n  clickedControl: e => {\n    // Add active class to clicked control and corresponding slide\n    slider.reset();\n    clearInterval(intervalF);\n    const control = e.target,\n      dataIndex = Number(control.dataset.index);\n    control.classList.add('active');\n    items.forEach((item, index) => {\n      if (index === dataIndex) {\n        // Add active class to corresponding slide\n        item.classList.add('active');\n      }\n    });\n    current = dataIndex; // Update current slide\n    slider.transitionDelay(headerItems);\n    slider.transitionDelay(descriptionItems);\n    intervalF = setInterval(slider.nextSlide, interval); // Fire that bad boi back up\n  },\n\n  reset: () => {\n    // Remove active classes\n    items.forEach(item => item.classList.remove('active'));\n    controls.forEach(control => control.classList.remove('active'));\n  },\n  transitionDelay: items => {\n    // Set incrementing css transition-delay for .item-header & .item-description, .vertical-part, b elements\n    let seconds;\n    items.forEach(item => {\n      const children = item.childNodes; // .vertical-part(s)\n      let count = 1,\n        delay;\n      item.classList.value === 'item-header' ? seconds = .015 : seconds = .007;\n      children.forEach(child => {\n        // iterate through .vertical-part(s) and style b element\n        if (child.classList) {\n          item.parentNode.classList.contains('active') ? delay = count * seconds + activeDelay : delay = count * seconds;\n          child.firstElementChild.style.transitionDelay = `${delay}s`; // b element\n          count++;\n        }\n      });\n    });\n  }\n};\nlet intervalF = setInterval(slider.nextSlide, interval);\nslider.init();","map":{"version":3,"names":["items","document","querySelectorAll","controls","headerItems","descriptionItems","activeDelay","interval","current","slider","init","forEach","control","addEventListener","e","clickedControl","classList","add","nextSlide","reset","length","transitionDelay","clearInterval","intervalF","target","dataIndex","Number","dataset","index","item","setInterval","remove","seconds","children","childNodes","count","delay","value","child","parentNode","contains","firstElementChild","style"],"sources":["/Users/danielpedersen/Documents/simple-react-website/src/data/Slider.js"],"sourcesContent":["// Master DOManipulator v2 ------------------------------------------------------------\nconst items = document.querySelectorAll('.item'),\n    controls = document.querySelectorAll('.control'),\n    headerItems = document.querySelectorAll('.item-header'),\n    descriptionItems = document.querySelectorAll('.item-description'),\n    activeDelay = .76,\n    interval = 5000;\n\nlet current = 0;\n\nconst slider = {\n    init: () => {\n        controls.forEach(control => control.addEventListener('click', (e) => {\n            slider.clickedControl(e)\n        }));\n        controls[current].classList.add('active');\n        items[current].classList.add('active');\n    },\n    nextSlide: () => { // Increment current slide and add active class\n        slider.reset();\n        if (current === items.length - 1) current = -1; // Check if current slide is last in array\n        current++;\n        controls[current].classList.add('active');\n        items[current].classList.add('active');\n        slider.transitionDelay(headerItems);\n        slider.transitionDelay(descriptionItems);\n    },\n    clickedControl: (e) => { // Add active class to clicked control and corresponding slide\n        slider.reset();\n        clearInterval(intervalF);\n\n        const control = e.target,\n            dataIndex = Number(control.dataset.index);\n\n        control.classList.add('active');\n        items.forEach((item, index) => {\n            if (index === dataIndex) { // Add active class to corresponding slide\n                item.classList.add('active');\n            }\n        })\n        current = dataIndex; // Update current slide\n        slider.transitionDelay(headerItems);\n        slider.transitionDelay(descriptionItems);\n        intervalF = setInterval(slider.nextSlide, interval); // Fire that bad boi back up\n    },\n    reset: () => { // Remove active classes\n        items.forEach(item => item.classList.remove('active'));\n        controls.forEach(control => control.classList.remove('active'));\n    },\n    transitionDelay: (items) => { // Set incrementing css transition-delay for .item-header & .item-description, .vertical-part, b elements\n        let seconds;\n\n        items.forEach(item => {\n            const children = item.childNodes; // .vertical-part(s)\n            let count = 1,\n                delay;\n\n            item.classList.value === 'item-header' ? seconds = .015 : seconds = .007;\n\n            children.forEach(child => { // iterate through .vertical-part(s) and style b element\n                if (child.classList) {\n                    item.parentNode.classList.contains('active') ? delay = count * seconds + activeDelay : delay = count * seconds;\n                    child.firstElementChild.style.transitionDelay = `${delay}s`; // b element\n                    count++;\n                }\n            })\n        })\n    },\n}\n\nlet intervalF = setInterval(slider.nextSlide, interval);\nslider.init();"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}