{"ast":null,"code":"const URL = \"http://localhost:3000/\";\nfunction handleHttpErrors(res) {\n  if (!res.ok) {\n    return Promise.reject({\n      status: res.status,\n      fullError: res.json()\n    });\n  }\n  return res.json();\n}\nfunction ApiFacade() {\n  /* Insert utility-methods from a later step (d) here (REMEMBER to uncomment in the returned object when you do)*/\n  const setToken = token => {\n    localStorage.setItem('jwtToken', token);\n  };\n  const getToken = () => {\n    return localStorage.getItem('jwtToken');\n  };\n  const loggedIn = () => {\n    const loggedIn = getToken() != null;\n    return loggedIn;\n  };\n  const logout = () => {\n    localStorage.removeItem(\"jwtToken\");\n  };\n  const login = (user, password) => {\n    const options = makeOptions(\"POST\", true, {\n      username: user,\n      password: password\n    });\n    return fetch(URL + \"/api/login\", options).then(handleHttpErrors).then(res => {\n      setToken(res.token);\n    });\n  };\n  const fetchData = endpoint => {\n    const options = makeOptions(\"GET\", true); //True add's the token\n    return fetch(URL + \"/api/info/\" + endpoint, options).then(handleHttpErrors);\n  };\n  const postData = (body, endpoint) => {\n    const options = makeOptions(\"POST\", true, body); //True add's the token\n    console.log(body);\n    return fetch(URL + \"/api/info/\" + endpoint, options).then(handleHttpErrors);\n  };\n  const makeOptions = (method, addToken, body) => {\n    var opts = {\n      method: method,\n      headers: {\n        \"Content-type\": \"application/json\",\n        'Accept': 'application/json'\n      }\n    };\n    if (addToken && loggedIn()) {\n      opts.headers[\"x-access-token\"] = getToken();\n    }\n    if (body) {\n      opts.body = JSON.stringify(body);\n    }\n    return opts;\n  };\n  return {\n    makeOptions,\n    setToken,\n    getToken,\n    loggedIn,\n    login,\n    logout,\n    fetchData,\n    postData\n  };\n}\n_c = ApiFacade;\nconst facade = ApiFacade();\nexport default facade;\nvar _c;\n$RefreshReg$(_c, \"ApiFacade\");","map":{"version":3,"names":["URL","handleHttpErrors","res","ok","Promise","reject","status","fullError","json","ApiFacade","setToken","token","localStorage","setItem","getToken","getItem","loggedIn","logout","removeItem","login","user","password","options","makeOptions","username","fetch","then","fetchData","endpoint","postData","body","console","log","method","addToken","opts","headers","JSON","stringify","facade"],"sources":["/Users/danielpedersen/Documents/complete-react-website/frontend/src/ApiFacade.js"],"sourcesContent":["const URL = \"http://localhost:3000/\";\n\nfunction handleHttpErrors(res) {\n    if (!res.ok) {\n        return Promise.reject({ status: res.status, fullError: res.json() })\n    }\n    return res.json();\n}\n\nfunction ApiFacade() {\n    /* Insert utility-methods from a later step (d) here (REMEMBER to uncomment in the returned object when you do)*/\n    const setToken = (token) => {\n        localStorage.setItem('jwtToken', token)\n    }\n    const getToken = () => {\n        return localStorage.getItem('jwtToken')\n    }\n    const loggedIn = () => {\n        const loggedIn = getToken() != null;\n        return loggedIn;\n    }\n\n    const logout = () => {\n        localStorage.removeItem(\"jwtToken\");\n    }\n\n    const login = (user, password) => {\n        const options = makeOptions(\"POST\", true,{username: user, password: password });\n        return fetch(URL + \"/api/login\", options)\n            .then(handleHttpErrors)\n            .then(res => {setToken(res.token) })\n    }\n\n    const fetchData = (endpoint) => {\n        const options = makeOptions(\"GET\",true); //True add's the token\n        return fetch(URL + \"/api/info/\" + endpoint, options).then(handleHttpErrors);\n    }\n\n    const postData = (body, endpoint) => {\n        const options = makeOptions(\"POST\",true, body); //True add's the token\n        console.log(body);\n        return fetch(URL + \"/api/info/\" + endpoint, options).then(handleHttpErrors);\n    }\n\n    const makeOptions = (method,addToken,body) => {\n        var opts = {\n            method: method,\n            headers: {\n                \"Content-type\": \"application/json\",\n                'Accept': 'application/json',\n            }\n        }\n        if (addToken && loggedIn()) {\n            opts.headers[\"x-access-token\"] = getToken();\n        }\n        if (body) {\n            opts.body = JSON.stringify(body);\n        }\n        return opts;\n    }\n    return {\n        makeOptions,\n        setToken,\n        getToken,\n        loggedIn,\n        login,\n        logout,\n        fetchData,\n        postData\n    }\n}\n\n\nconst facade = ApiFacade();\nexport default facade;"],"mappings":"AAAA,MAAMA,GAAG,GAAG,wBAAwB;AAEpC,SAASC,gBAAgB,CAACC,GAAG,EAAE;EAC3B,IAAI,CAACA,GAAG,CAACC,EAAE,EAAE;IACT,OAAOC,OAAO,CAACC,MAAM,CAAC;MAAEC,MAAM,EAAEJ,GAAG,CAACI,MAAM;MAAEC,SAAS,EAAEL,GAAG,CAACM,IAAI;IAAG,CAAC,CAAC;EACxE;EACA,OAAON,GAAG,CAACM,IAAI,EAAE;AACrB;AAEA,SAASC,SAAS,GAAG;EACjB;EACA,MAAMC,QAAQ,GAAIC,KAAK,IAAK;IACxBC,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEF,KAAK,CAAC;EAC3C,CAAC;EACD,MAAMG,QAAQ,GAAG,MAAM;IACnB,OAAOF,YAAY,CAACG,OAAO,CAAC,UAAU,CAAC;EAC3C,CAAC;EACD,MAAMC,QAAQ,GAAG,MAAM;IACnB,MAAMA,QAAQ,GAAGF,QAAQ,EAAE,IAAI,IAAI;IACnC,OAAOE,QAAQ;EACnB,CAAC;EAED,MAAMC,MAAM,GAAG,MAAM;IACjBL,YAAY,CAACM,UAAU,CAAC,UAAU,CAAC;EACvC,CAAC;EAED,MAAMC,KAAK,GAAG,CAACC,IAAI,EAAEC,QAAQ,KAAK;IAC9B,MAAMC,OAAO,GAAGC,WAAW,CAAC,MAAM,EAAE,IAAI,EAAC;MAACC,QAAQ,EAAEJ,IAAI;MAAEC,QAAQ,EAAEA;IAAS,CAAC,CAAC;IAC/E,OAAOI,KAAK,CAACzB,GAAG,GAAG,YAAY,EAAEsB,OAAO,CAAC,CACpCI,IAAI,CAACzB,gBAAgB,CAAC,CACtByB,IAAI,CAACxB,GAAG,IAAI;MAACQ,QAAQ,CAACR,GAAG,CAACS,KAAK,CAAC;IAAC,CAAC,CAAC;EAC5C,CAAC;EAED,MAAMgB,SAAS,GAAIC,QAAQ,IAAK;IAC5B,MAAMN,OAAO,GAAGC,WAAW,CAAC,KAAK,EAAC,IAAI,CAAC,CAAC,CAAC;IACzC,OAAOE,KAAK,CAACzB,GAAG,GAAG,YAAY,GAAG4B,QAAQ,EAAEN,OAAO,CAAC,CAACI,IAAI,CAACzB,gBAAgB,CAAC;EAC/E,CAAC;EAED,MAAM4B,QAAQ,GAAG,CAACC,IAAI,EAAEF,QAAQ,KAAK;IACjC,MAAMN,OAAO,GAAGC,WAAW,CAAC,MAAM,EAAC,IAAI,EAAEO,IAAI,CAAC,CAAC,CAAC;IAChDC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;IACjB,OAAOL,KAAK,CAACzB,GAAG,GAAG,YAAY,GAAG4B,QAAQ,EAAEN,OAAO,CAAC,CAACI,IAAI,CAACzB,gBAAgB,CAAC;EAC/E,CAAC;EAED,MAAMsB,WAAW,GAAG,CAACU,MAAM,EAACC,QAAQ,EAACJ,IAAI,KAAK;IAC1C,IAAIK,IAAI,GAAG;MACPF,MAAM,EAAEA,MAAM;MACdG,OAAO,EAAE;QACL,cAAc,EAAE,kBAAkB;QAClC,QAAQ,EAAE;MACd;IACJ,CAAC;IACD,IAAIF,QAAQ,IAAIlB,QAAQ,EAAE,EAAE;MACxBmB,IAAI,CAACC,OAAO,CAAC,gBAAgB,CAAC,GAAGtB,QAAQ,EAAE;IAC/C;IACA,IAAIgB,IAAI,EAAE;MACNK,IAAI,CAACL,IAAI,GAAGO,IAAI,CAACC,SAAS,CAACR,IAAI,CAAC;IACpC;IACA,OAAOK,IAAI;EACf,CAAC;EACD,OAAO;IACHZ,WAAW;IACXb,QAAQ;IACRI,QAAQ;IACRE,QAAQ;IACRG,KAAK;IACLF,MAAM;IACNU,SAAS;IACTE;EACJ,CAAC;AACL;AAAC,KA7DQpB,SAAS;AAgElB,MAAM8B,MAAM,GAAG9B,SAAS,EAAE;AAC1B,eAAe8B,MAAM;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}