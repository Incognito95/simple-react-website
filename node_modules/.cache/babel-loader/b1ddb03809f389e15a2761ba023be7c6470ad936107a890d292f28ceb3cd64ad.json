{"ast":null,"code":"const URL = \"http://localhost:3000\";\nfunction handleHttpErrors(res) {\n  if (!res.ok) {\n    return Promise.reject({\n      status: res.status,\n      fullError: res.json()\n    });\n  }\n  return res.json();\n}\nfunction ApiFacade() {\n  const fetchData = endpoint => {\n    const options = makeOptions(\"GET\", true); //True add's the token\n    return fetch(URL + \"/api/info/\" + endpoint, options).then(handleHttpErrors);\n  };\n  const makeOptions = (method, addToken, body) => {\n    var opts = {\n      method: method,\n      headers: {\n        \"Content-type\": \"application/json\",\n        'Accept': 'application/json'\n      }\n    };\n    if (addToken && loggedIn()) {\n      opts.headers[\"x-access-token\"] = getToken();\n    }\n    if (body) {\n      opts.body = JSON.stringify(body);\n    }\n    return opts;\n  };\n  return {\n    fetchData\n  };\n}\n_c = ApiFacade;\nconst facade = ApiFacade();\nexport default facade;\nvar _c;\n$RefreshReg$(_c, \"ApiFacade\");","map":{"version":3,"names":["URL","handleHttpErrors","res","ok","Promise","reject","status","fullError","json","ApiFacade","fetchData","endpoint","options","makeOptions","fetch","then","method","addToken","body","opts","headers","loggedIn","getToken","JSON","stringify","facade"],"sources":["/Users/danielpedersen/Documents/simple-react-website/src/ApiFacade.js"],"sourcesContent":["const URL = \"http://localhost:3000\";\n\nfunction handleHttpErrors(res) {\n    if (!res.ok) {\n        return Promise.reject({ status: res.status, fullError: res.json() })\n    }\n    return res.json();\n}\n\nfunction ApiFacade() {\n\n    const fetchData = (endpoint) => {\n        const options = makeOptions(\"GET\",true); //True add's the token\n        return fetch(URL + \"/api/info/\" + endpoint, options).then(handleHttpErrors);\n    }\n\n    const makeOptions = (method,addToken,body) => {\n        var opts = {\n            method: method,\n            headers: {\n                \"Content-type\": \"application/json\",\n                'Accept': 'application/json',\n            }\n        }\n        if (addToken && loggedIn()) {\n            opts.headers[\"x-access-token\"] = getToken();\n        }\n        if (body) {\n            opts.body = JSON.stringify(body);\n        }\n        return opts;\n    }\n    return {\n        fetchData\n    }\n}\n\n\nconst facade = ApiFacade();\nexport default facade;"],"mappings":"AAAA,MAAMA,GAAG,GAAG,uBAAuB;AAEnC,SAASC,gBAAgB,CAACC,GAAG,EAAE;EAC3B,IAAI,CAACA,GAAG,CAACC,EAAE,EAAE;IACT,OAAOC,OAAO,CAACC,MAAM,CAAC;MAAEC,MAAM,EAAEJ,GAAG,CAACI,MAAM;MAAEC,SAAS,EAAEL,GAAG,CAACM,IAAI;IAAG,CAAC,CAAC;EACxE;EACA,OAAON,GAAG,CAACM,IAAI,EAAE;AACrB;AAEA,SAASC,SAAS,GAAG;EAEjB,MAAMC,SAAS,GAAIC,QAAQ,IAAK;IAC5B,MAAMC,OAAO,GAAGC,WAAW,CAAC,KAAK,EAAC,IAAI,CAAC,CAAC,CAAC;IACzC,OAAOC,KAAK,CAACd,GAAG,GAAG,YAAY,GAAGW,QAAQ,EAAEC,OAAO,CAAC,CAACG,IAAI,CAACd,gBAAgB,CAAC;EAC/E,CAAC;EAED,MAAMY,WAAW,GAAG,CAACG,MAAM,EAACC,QAAQ,EAACC,IAAI,KAAK;IAC1C,IAAIC,IAAI,GAAG;MACPH,MAAM,EAAEA,MAAM;MACdI,OAAO,EAAE;QACL,cAAc,EAAE,kBAAkB;QAClC,QAAQ,EAAE;MACd;IACJ,CAAC;IACD,IAAIH,QAAQ,IAAII,QAAQ,EAAE,EAAE;MACxBF,IAAI,CAACC,OAAO,CAAC,gBAAgB,CAAC,GAAGE,QAAQ,EAAE;IAC/C;IACA,IAAIJ,IAAI,EAAE;MACNC,IAAI,CAACD,IAAI,GAAGK,IAAI,CAACC,SAAS,CAACN,IAAI,CAAC;IACpC;IACA,OAAOC,IAAI;EACf,CAAC;EACD,OAAO;IACHT;EACJ,CAAC;AACL;AAAC,KA1BQD,SAAS;AA6BlB,MAAMgB,MAAM,GAAGhB,SAAS,EAAE;AAC1B,eAAegB,MAAM;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}