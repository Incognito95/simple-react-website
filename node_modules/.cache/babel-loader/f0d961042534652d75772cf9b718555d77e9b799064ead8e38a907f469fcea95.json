{"ast":null,"code":"import React, { forwardRef, useRef, useState, useEffect, Fragment, cloneElement } from 'react';\nimport Glide$1 from '@glidejs/glide';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport '@glidejs/glide/dist/css/glide.core.min.css';\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nvar Slide = function (_ref) {\n  var slide = _ref.slide,\n    slideClassName = _ref.slideClassName,\n    rest = _objectWithoutPropertiesLoose(_ref, [\"slide\", \"index\", \"slideClassName\"]);\n  return React.createElement(\"li\", Object.assign({\n    className: \"glide__slide \" + (slideClassName || '')\n  }, rest), slide);\n};\nvar ArrowLeftIcon = forwardRef(function (_ref, ref) {\n  var iconSize = _ref.iconSize,\n    color = _ref.color,\n    rest = _objectWithoutPropertiesLoose(_ref, [\"iconSize\", \"color\"]);\n  return React.createElement(\"svg\", Object.assign({\n    width: iconSize || 20,\n    height: iconSize || 20,\n    viewBox: \"0 0 24 24\",\n    xmlns: \"http://www.w3.org/2000/svg\"\n  }, rest), React.createElement(\"polyline\", {\n    ref: ref,\n    fill: \"none\",\n    stroke: color || '#37474F',\n    points: \"17.5 22 6.5 12 17.5 2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"3\"\n  }));\n});\nvar ArrowRightIcon = forwardRef(function (_ref, ref) {\n  var iconSize = _ref.iconSize,\n    color = _ref.color,\n    rest = _objectWithoutPropertiesLoose(_ref, [\"iconSize\", \"color\"]);\n  return React.createElement(\"svg\", Object.assign({\n    width: iconSize || 20,\n    height: iconSize || 20,\n    viewBox: \"0 0 24 24\",\n    xmlns: \"http://www.w3.org/2000/svg\"\n  }, rest), React.createElement(\"polyline\", {\n    ref: ref,\n    fill: \"none\",\n    stroke: color || '#37474F',\n    points: \"6.5 2 17.5 12 6.5 22\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: \"3\"\n  }));\n});\nvar MOUNT_BEFORE = 'mount.before';\nvar MOUNT_AFTER = 'mount.after';\nvar UPDATE = 'update';\nvar PLAY = 'play';\nvar PAUSE = 'pause';\nvar BUILD_BEFORE = 'build.before';\nvar BUILD_AFTER = 'build.after';\nvar RUN_BEFORE = 'run.before';\nvar RUN = 'run';\nvar RUN_AFTER = 'run.after';\nvar RUN_OFFSET = 'run.offset';\nvar RUN_START = 'run.start';\nvar RUN_END = 'run.end';\nvar MOVE = 'move';\nvar MOVE_AFTER = 'move.after';\nvar RESIZE = 'resize';\nvar SWIPE_START = 'swipe.start';\nvar SWIPE_MOVE = 'swipe.move';\nvar SWIPE_END = 'swipe.end';\nvar TRANSLATE_JUMP = 'translate.jump';\nvar baseStyles = {\n  \"sliderArrow\": \"_10XKC\"\n};\nvar styles = {\n  position: \"relative\",\n  width: \"100%\",\n  overflow: \"hidden\",\n  boxSizing: \"border-box\"\n};\nvar defaultProps = {\n  children: null,\n  className: \"glide\",\n  style: {},\n  hideArrows: false\n};\nvar Glide = forwardRef(function (props, ref) {\n  if (props === void 0) {\n    props = defaultProps;\n  }\n  var _props = props,\n    children = _props.children,\n    className = _props.className,\n    slideClassName = _props.slideClassName,\n    hideArrows = _props.hideArrows,\n    arrowSize = _props.arrowSize,\n    arrowColor = _props.arrowColor,\n    leftArrowComponent = _props.leftArrowComponent,\n    rightArrowComponent = _props.rightArrowComponent,\n    style = _props.style,\n    startAt = _props.startAt,\n    animationDuration = _props.animationDuration,\n    animationTimingFunc = _props.animationTimingFunc,\n    customSlideAnimation = _props.customSlideAnimation,\n    onMountBefore = _props.onMountBefore,\n    onMountAfter = _props.onMountAfter,\n    onUpdate = _props.onUpdate,\n    onPlay = _props.onPlay,\n    onPause = _props.onPause,\n    onBuildBefore = _props.onBuildBefore,\n    onBuildAfter = _props.onBuildAfter,\n    onRunBefore = _props.onRunBefore,\n    onRun = _props.onRun,\n    onRunAfter = _props.onRunAfter,\n    onRunOffset = _props.onRunOffset,\n    onRunStart = _props.onRunStart,\n    onRunEnd = _props.onRunEnd,\n    onMove = _props.onMove,\n    onMoveAfter = _props.onMoveAfter,\n    onResize = _props.onResize,\n    onSwipeStart = _props.onSwipeStart,\n    onSwipeMove = _props.onSwipeMove,\n    onSwipeEnd = _props.onSwipeEnd,\n    onTranslateJump = _props.onTranslateJump;\n  var glideRef = useRef(null);\n  var _useState = useState(startAt === 0 ? 0 : startAt),\n    activeSlide = _useState[0],\n    setActiveSlide = _useState[1];\n  useEffect(function () {\n    var glide;\n    glide = new Glide$1(glideRef.current, _extends({}, props, {\n      animationDuration: customSlideAnimation ? customSlideAnimation.timeout : animationDuration ? animationDuration : 400,\n      animationTimingFunc: customSlideAnimation ? \"\" : animationTimingFunc ? animationTimingFunc : \"cubic-bezier(0.165, 0.840, 0.440, 1.000)\"\n    }));\n    glide.on(MOUNT_BEFORE, function () {\n      if (onMountBefore) {\n        onMountBefore();\n      }\n    });\n    glide.on(MOUNT_AFTER, function () {\n      if (onMountAfter) {\n        onMountAfter();\n      }\n    });\n    glide.on(UPDATE, function () {\n      if (onUpdate) {\n        onUpdate();\n      }\n    });\n    glide.on(PLAY, function () {\n      if (onPlay) {\n        onPlay();\n      }\n    });\n    glide.on(PAUSE, function () {\n      if (onPause) {\n        onPause();\n      }\n    });\n    glide.on(BUILD_BEFORE, function () {\n      if (onBuildBefore) {\n        onBuildBefore();\n      }\n    });\n    glide.on(BUILD_AFTER, function () {\n      if (onBuildAfter) {\n        onBuildAfter();\n      }\n    });\n    glide.on(RUN_BEFORE, function () {\n      if (onRunBefore) {\n        onRunBefore();\n      }\n    });\n    glide.on(RUN, function () {\n      setActiveSlide(glide.index);\n      if (onRun) {\n        onRun();\n      }\n    });\n    glide.on(RUN_AFTER, function () {\n      if (onRunAfter) {\n        onRunAfter();\n      }\n    });\n    glide.on(RUN_OFFSET, function () {\n      if (onRunOffset) {\n        onRunOffset();\n      }\n    });\n    glide.on(RUN_START, function () {\n      if (onRunStart) {\n        onRunStart();\n      }\n    });\n    glide.on(RUN_END, function () {\n      if (onRunEnd) {\n        onRunEnd();\n      }\n    });\n    glide.on(MOVE, function () {\n      if (onMove) {\n        onMove();\n      }\n    });\n    glide.on(MOVE_AFTER, function () {\n      if (onMoveAfter) {\n        onMoveAfter();\n      }\n    });\n    glide.on(RESIZE, function () {\n      if (onResize) {\n        onResize();\n      }\n    });\n    glide.on(SWIPE_START, function () {\n      if (onSwipeStart) {\n        onSwipeStart();\n      }\n    });\n    glide.on(SWIPE_MOVE, function () {\n      if (onSwipeMove) {\n        onSwipeMove();\n      }\n    });\n    glide.on(SWIPE_END, function () {\n      if (onSwipeEnd) {\n        onSwipeEnd();\n      }\n    });\n    glide.on(TRANSLATE_JUMP, function () {\n      if (onTranslateJump) {\n        onTranslateJump();\n      }\n    });\n    glide.mount();\n    if (ref) {\n      ref.current = glide;\n    }\n    return function () {\n      return glide.destroy();\n    };\n  }, [props]);\n  return React.createElement(\"div\", {\n    ref: glideRef,\n    className: className,\n    style: _extends({}, styles, {}, style)\n  }, React.createElement(\"div\", {\n    className: \"slider__track glide__track\",\n    \"data-glide-el\": \"track\"\n  }, React.createElement(TransitionGroup, {\n    component: \"ul\",\n    className: \"glide__slides\"\n  }, children.map(function (slide, index) {\n    return React.createElement(Fragment, {\n      key: index\n    }, customSlideAnimation ? React.createElement(CSSTransition, {\n      \"in\": index === activeSlide,\n      timeout: customSlideAnimation.timeout,\n      classNames: customSlideAnimation.classNames,\n      onEnter: customSlideAnimation.onEnter,\n      onExit: customSlideAnimation.onExit\n    }, React.createElement(Slide, {\n      slideClassName: slideClassName,\n      slide: slide,\n      index: index\n    })) : React.createElement(Slide, {\n      slideClassName: slideClassName,\n      slide: slide,\n      index: index\n    }));\n  }))), !hideArrows && React.createElement(\"div\", {\n    style: {\n      height: 0\n    },\n    \"data-glide-el\": \"controls\"\n  }, leftArrowComponent ? React.createElement(Fragment, null, cloneElement(leftArrowComponent, {\n    className: baseStyles.sliderArrow + \" Glide-leftArrow\",\n    \"data-glide-dir\": \"<\",\n    \"aria-label\": \"left-arrow\"\n  })) : React.createElement(\"button\", {\n    \"aria-label\": \"left-arrow\",\n    \"data-glide-dir\": \"<\",\n    className: baseStyles.sliderArrow + \" Glide-leftArrow\"\n  }, React.createElement(ArrowLeftIcon, {\n    iconSize: arrowSize,\n    color: arrowColor\n  })), rightArrowComponent ? React.createElement(Fragment, null, cloneElement(rightArrowComponent, {\n    className: baseStyles.sliderArrow + \" Glide-rightArrow\",\n    \"data-glide-dir\": \">\",\n    \"aria-label\": \"right-arrow\"\n  })) : React.createElement(\"button\", {\n    \"aria-label\": \"right-arrow\",\n    \"data-glide-dir\": \">\",\n    className: baseStyles.sliderArrow + \" Glide-rightArrow\"\n  }, React.createElement(ArrowRightIcon, {\n    iconSize: arrowSize,\n    color: arrowColor\n  }))));\n});\nexport default Glide;","map":{"version":3,"mappings":"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","names":["slide","slideClassName","rest","React","className","forwardRef","ref","iconSize","color","width","height","viewBox","xmlns","fill","stroke","points","strokeLinecap","strokeLinejoin","strokeWidth","MOUNT_BEFORE","MOUNT_AFTER","UPDATE","PLAY","PAUSE","BUILD_BEFORE","BUILD_AFTER","RUN_BEFORE","RUN","RUN_AFTER","RUN_OFFSET","RUN_START","RUN_END","MOVE","MOVE_AFTER","RESIZE","SWIPE_START","SWIPE_MOVE","SWIPE_END","TRANSLATE_JUMP","styles","position","overflow","boxSizing","defaultProps","children","style","hideArrows","props","arrowSize","arrowColor","leftArrowComponent","rightArrowComponent","startAt","animationDuration","animationTimingFunc","customSlideAnimation","onMountBefore","onMountAfter","onUpdate","onPlay","onPause","onBuildBefore","onBuildAfter","onRunBefore","onRun","onRunAfter","onRunOffset","onRunStart","onRunEnd","onMove","onMoveAfter","onResize","onSwipeStart","onSwipeMove","onSwipeEnd","onTranslateJump","glideRef","useRef","useState","activeSlide","setActiveSlide","useEffect","glide","Glide","current","timeout","on","index","mount","destroy","TransitionGroup","component","map","Fragment","key","CSSTransition","classNames","onEnter","onExit","Slide","cloneElement","baseStyles","sliderArrow","ArrowLeftIcon","ArrowRightIcon"],"sources":["/Users/danielpedersen/Documents/simple-react-website/node_modules/react-glidejs/src/Slide.tsx","/Users/danielpedersen/Documents/simple-react-website/node_modules/react-glidejs/src/icons/ArrowLeftIcon.tsx","/Users/danielpedersen/Documents/simple-react-website/node_modules/react-glidejs/src/icons/ArrowRightIcon.tsx","/Users/danielpedersen/Documents/simple-react-website/node_modules/react-glidejs/src/constants.ts","/Users/danielpedersen/Documents/simple-react-website/node_modules/react-glidejs/src/Glide.tsx"],"sourcesContent":["import React from 'react';\nimport { ISlideProps } from './types';\n\nexport default ({ slide, index, slideClassName, ...rest }: ISlideProps) => (\n  <li className={`glide__slide ${slideClassName || ''}`} {...rest}>\n    {slide}\n  </li>\n);\n","import React, { forwardRef } from 'react';\n\nimport { IIconProps } from './index';\n\nexport default forwardRef<React.RefObject<SVGElement | null>, IIconProps>((\n  {\n    iconSize,\n    color,\n    ...rest\n  },\n  ref,\n) => (\n  <svg\n    width={iconSize || 20}\n    height={iconSize || 20}\n    viewBox=\"0 0 24 24\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    {...rest}\n  >\n    <polyline\n      ref={ref as any}\n      fill=\"none\"\n      stroke={color || '#37474F'}\n      points=\"17.5 22 6.5 12 17.5 2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"3\"\n    />\n  </svg>\n));\n","import React, { forwardRef } from 'react';\n\nimport { IIconProps } from './index';\n\nexport default forwardRef<React.RefObject<SVGElement | null>, IIconProps>((\n  {\n    iconSize,\n    color,\n    ...rest\n  },\n  ref,\n) => (\n  <svg\n    width={iconSize || 20}\n    height={iconSize || 20}\n    viewBox=\"0 0 24 24\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    {...rest}\n  >\n    <polyline\n      ref={ref as any}\n      fill=\"none\"\n      stroke={color || '#37474F'}\n      points=\"6.5 2 17.5 12 6.5 22\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"3\"\n    />\n  </svg>\n));\n","export const MOUNT_BEFORE = 'mount.before';\nexport const MOUNT_AFTER = 'mount.after';\nexport const UPDATE = 'update';\nexport const PLAY = 'play';\nexport const PAUSE = 'pause';\nexport const BUILD_BEFORE = 'build.before';\nexport const BUILD_AFTER = 'build.after';\nexport const RUN_BEFORE = 'run.before';\nexport const RUN = 'run';\nexport const RUN_AFTER = 'run.after';\nexport const RUN_OFFSET = 'run.offset';\nexport const RUN_START = 'run.start';\nexport const RUN_END = 'run.end';\nexport const MOVE = 'move';\nexport const MOVE_AFTER = 'move.after';\nexport const RESIZE = 'resize';\nexport const SWIPE_START = 'swipe.start';\nexport const SWIPE_MOVE = 'swipe.move';\nexport const SWIPE_END = 'swipe.end';\nexport const TRANSLATE_JUMP = 'translate.jump';\n","import React, {\n  cloneElement,\n  forwardRef,\n  Fragment,\n  useEffect,\n  useRef,\n  useState,\n} from \"react\";\nimport Glide from \"@glidejs/glide\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\n\nimport Slide from \"./Slide\";\nimport ArrowLeftIcon from \"./icons/ArrowLeftIcon\";\nimport ArrowRightIcon from \"./icons/ArrowRightIcon\";\nimport {\n  BUILD_AFTER,\n  BUILD_BEFORE,\n  MOUNT_AFTER,\n  MOUNT_BEFORE,\n  MOVE,\n  MOVE_AFTER,\n  PAUSE,\n  PLAY,\n  RESIZE,\n  RUN,\n  RUN_AFTER,\n  RUN_BEFORE,\n  RUN_END,\n  RUN_OFFSET,\n  RUN_START,\n  SWIPE_END,\n  SWIPE_MOVE,\n  SWIPE_START,\n  TRANSLATE_JUMP,\n  UPDATE,\n} from \"./constants\";\n\nimport { IGlideProps } from \"./types\";\nimport baseStyles from \"./index.module.css\";\nimport \"@glidejs/glide/dist/css/glide.core.min.css\";\n\nconst styles = {\n  position: \"relative\",\n  width: \"100%\",\n  overflow: \"hidden\",\n  boxSizing: \"border-box\",\n};\n\nconst defaultProps = {\n  /* Additional React props */\n  children: null,\n  className: \"glide\",\n  style: {},\n  hideArrows: false,\n};\n\nexport default forwardRef<React.MutableRefObject<any>, IGlideProps>((\n  props = defaultProps,\n  ref: React.MutableRefObject<any>,\n) => {\n  const {\n    children,\n    className,\n    slideClassName,\n    hideArrows,\n    arrowSize,\n    arrowColor,\n    leftArrowComponent,\n    rightArrowComponent,\n    style,\n    startAt,\n    animationDuration,\n    animationTimingFunc,\n\n    customSlideAnimation,\n\n    onMountBefore,\n    onMountAfter,\n    onUpdate,\n    onPlay,\n    onPause,\n    onBuildBefore,\n    onBuildAfter,\n    onRunBefore,\n    onRun,\n    onRunAfter,\n    onRunOffset,\n    onRunStart,\n    onRunEnd,\n    onMove,\n    onMoveAfter,\n    onResize,\n    onSwipeStart,\n    onSwipeMove,\n    onSwipeEnd,\n    onTranslateJump,\n  } = props;\n\n  /* throwing an error here may be annoying and not useful. */\n  // if (!children || Children.count(children) < 2) {\n  //   throw new Error('At least 2 slides must be provided to the Glide'\n  //     + ' component.');\n  // }\n\n  const glideRef = useRef<HTMLDivElement>(null);\n\n  const [activeSlide, setActiveSlide] = useState(startAt === 0 ? 0 : startAt);\n\n  useEffect(() => {\n    let glide: any;\n\n    glide = new Glide(glideRef.current, {\n      ...props,\n      // If the `customSlideAnimation` prop is passed, then override\n      // Glide.js' default animation values.\n      animationDuration: customSlideAnimation\n        // Important: If a custom animation is provided, `animationDuration`\n        // must exactly match the custom animation's `timeout` duration.\n        ? customSlideAnimation.timeout\n        : animationDuration\n          ? animationDuration\n          // ...otherwise use the default duration of 400ms.\n          : 400,\n      animationTimingFunc: customSlideAnimation\n        ? \"\"\n        : animationTimingFunc\n          ? animationTimingFunc\n          : \"cubic-bezier(0.165, 0.840, 0.440, 1.000)\",\n    });\n\n    glide.on(MOUNT_BEFORE, () => {\n      if (onMountBefore) {\n        onMountBefore();\n      }\n    });\n    glide.on(MOUNT_AFTER, () => {\n      if (onMountAfter) {\n        onMountAfter();\n      }\n    });\n    glide.on(UPDATE, () => {\n      if (onUpdate) {\n        onUpdate();\n      }\n    });\n    glide.on(PLAY, () => {\n      if (onPlay) {\n        onPlay();\n      }\n    });\n    glide.on(PAUSE, () => {\n      if (onPause) {\n        onPause();\n      }\n    });\n    glide.on(BUILD_BEFORE, () => {\n      if (onBuildBefore) {\n        onBuildBefore();\n      }\n    });\n    glide.on(BUILD_AFTER, () => {\n      if (onBuildAfter) {\n        onBuildAfter();\n      }\n    });\n    glide.on(RUN_BEFORE, () => {\n      if (onRunBefore) {\n        onRunBefore();\n      }\n    });\n    glide.on(RUN, () => {\n      setActiveSlide(glide.index);\n\n      if (onRun) {\n        onRun();\n      }\n    });\n    glide.on(RUN_AFTER, () => {\n      if (onRunAfter) {\n        onRunAfter();\n      }\n    });\n    glide.on(RUN_OFFSET, () => {\n      if (onRunOffset) {\n        onRunOffset();\n      }\n    });\n    glide.on(RUN_START, () => {\n      if (onRunStart) {\n        onRunStart();\n      }\n    });\n    glide.on(RUN_END, () => {\n      if (onRunEnd) {\n        onRunEnd();\n      }\n    });\n    glide.on(MOVE, () => {\n      if (onMove) {\n        onMove();\n      }\n    });\n    glide.on(MOVE_AFTER, () => {\n      if (onMoveAfter) {\n        onMoveAfter();\n      }\n    });\n    glide.on(RESIZE, () => {\n      if (onResize) {\n        onResize();\n      }\n    });\n    glide.on(SWIPE_START, () => {\n      if (onSwipeStart) {\n        onSwipeStart();\n      }\n    });\n    glide.on(SWIPE_MOVE, () => {\n      if (onSwipeMove) {\n        onSwipeMove();\n      }\n    });\n    glide.on(SWIPE_END, () => {\n      if (onSwipeEnd) {\n        onSwipeEnd();\n      }\n    });\n    glide.on(TRANSLATE_JUMP, () => {\n      if (onTranslateJump) {\n        onTranslateJump();\n      }\n    });\n\n    glide.mount(/* TODO: Put custom events here */);\n\n    if (ref) {\n      // Provides direct access to the underlying Glide object is a ref is\n      // passed from the parent component.\n      ref.current = glide;\n    }\n\n    return () => glide.destroy();\n  }, [props]);\n\n  return (\n    <div\n      ref={glideRef}\n      className={className}\n      style={{\n        ...styles,\n        ...style as any,\n      }}\n    >\n      <div className=\"slider__track glide__track\" data-glide-el=\"track\">\n        <TransitionGroup component=\"ul\" className=\"glide__slides\">\n          {children!.map((slide: React.ReactElement, index: number) => (\n            <Fragment key={index}>\n              {customSlideAnimation ? (\n                <CSSTransition\n                  in={index === activeSlide}\n                  timeout={customSlideAnimation.timeout}\n                  classNames={customSlideAnimation.classNames}\n                  onEnter={customSlideAnimation.onEnter}\n                  onExit={customSlideAnimation.onExit}\n                >\n                  <Slide\n                    slideClassName={slideClassName}\n                    slide={slide}\n                    index={index}\n                  />\n                </CSSTransition>\n              ) : (\n                <Slide\n                  slideClassName={slideClassName}\n                  slide={slide}\n                  index={index}\n                />\n              )}\n            </Fragment>\n          ))}\n        </TransitionGroup>\n      </div>\n      {!hideArrows && (\n        <div style={{ height: 0 }} data-glide-el=\"controls\">\n          {leftArrowComponent ? (\n            <Fragment>\n              {cloneElement(leftArrowComponent as any, {\n                className: `${baseStyles.sliderArrow} Glide-leftArrow`,\n                \"data-glide-dir\": \"<\",\n                \"aria-label\": \"left-arrow\",\n              })}\n            </Fragment>\n          ) : (\n            <button\n              aria-label=\"left-arrow\"\n              data-glide-dir=\"<\"\n              className={`${baseStyles.sliderArrow} Glide-leftArrow`}\n            >\n              <ArrowLeftIcon iconSize={arrowSize} color={arrowColor} />\n            </button>\n          )}\n          {rightArrowComponent ? (\n            <Fragment>\n              {cloneElement(rightArrowComponent as any, {\n                className: `${baseStyles.sliderArrow} Glide-rightArrow`,\n                \"data-glide-dir\": \">\",\n                \"aria-label\": \"right-arrow\",\n              })}\n            </Fragment>\n          ) : (\n            <button\n              aria-label=\"right-arrow\"\n              data-glide-dir=\">\"\n              className={`${baseStyles.sliderArrow} Glide-rightArrow`}\n            >\n              <ArrowRightIcon iconSize={arrowSize} color={arrowColor} />\n            </button>\n          )}\n        </div>\n      )}\n    </div>\n  );\n});\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}